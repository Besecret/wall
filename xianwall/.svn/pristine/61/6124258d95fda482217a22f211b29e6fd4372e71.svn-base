package com.wanding.controller.pc;

import java.time.LocalDateTime;
import java.time.ZoneOffset;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import javax.servlet.http.HttpServletRequest;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import com.wanding.model.UserInfo;
import com.wanding.service.UserInfoService;
import com.wanding.util.JsonResponse;
import com.wanding.util.SessionIdGeneratorUtils;

/**
 * pc 会员登陆  
 * @author dong.wang
 *
 */

@Controller
@RequestMapping("/login")
public class MemberControlle {
    
    private static final Logger log = LoggerFactory.getLogger(MemberControlle.class);
    
    @Autowired
    private UserInfoService userService;
    
    

    @RequestMapping("/main")
    public String main() {
        return "index";
        
    }
    
    
    
    @RequestMapping("/loginVerify")
    @ResponseBody
    public Object login(@RequestBody() Map<String, Object> param) {
 
        String username = param.get("username").toString();
        String password = param.get("password").toString();

  
        UserInfo user = userService.findUserByUsername(username);
        // 1.根据用登陆角色查询用户
        if (user == null) {
     
            return JsonResponse.failure("查询无此用户！");
        }
        // 如果状态为admin PC端管理员
        if (user.getUserrole().equals("admin")) {
           
            String encPass = user.getPassword();
            if (encPass.equals(password)) {
                // 验证成功
                String session = UUID.randomUUID().toString().replaceAll("-","");
                user.setSession(session);
                user.setExpiresTime(LocalDateTime.now().plusHours(2)
                        .toInstant(ZoneOffset.of("+8")).toEpochMilli() / 1000);
                //更新session                
                int num= userService.updateByPrimaryKey(user);
                if(num <0) {
                    log.error("更新session 失败");
                }
                HashMap<String, Object> map = new HashMap<String, Object>();
                 map.put("sessionKey", session);
                 map.put("user",user);
                return JsonResponse.success("登陆成功",map);
               
            } else {
     
                return JsonResponse.failure("用户名或密码错误，请重新登陆");
            }
        } else {
           
            return JsonResponse.failure("用户名状态不可用，请等待审批");
        }
    }
    
    @RequestMapping("/logout")
    @ResponseBody
    public Object logout(HttpServletRequest request) {

       
        String sessionKey =  request.getHeader("sessionKey");
        UserInfo user = userService.findUserInfoBySession(sessionKey);
        // 1.根据用登陆角色查询用户
        if (user == null) {
            return JsonResponse.success("已注销");
        }
        user.setSession("");
        int num= userService.updateByPrimaryKey(user);
        if(num <0) {
            log.error("更新session 失败");
            return JsonResponse.failure("更新session 失败");
        }
        else {
            return JsonResponse.success("已注销");
        }
    }

}
